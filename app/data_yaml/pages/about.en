
# About

Jetware provides a runtime environment manager and a software packages collections - programs and libraries used in server applications. These can be either popular web applications (Wordpress, Drupal, Redmine, Confluence, and others), or your own developed applications. The online services and the software package collections are provided free of charge.


#### Runtime environment - appliance

The web application runtime environment is supplied as an "appliance* - a complete set of all the programs and libraries used by this application. Different applications may use different programs, their version, and their configuration, and for each application can be created a runtime environment fine fitted to all of these requirements.

All programs from Jetware collection are optimized for web-oriented jobs and configured to interact with each other. The appliance is ready for immediate use just after the installation and it requires neither additional software nor further configuration.

#### Online constructor of appliances

You can create your own new appliance with online constructor by selecting programs and versions required, or choose a ready-made appliance from an appliance public directory. You can also select an existing appliance and adjust it to your requirements, adding the new necessary programs or changing the version of the programs included.

An appliance can be reused again or can be shared with other Jetware users.

The configuration of an appliance is stored in a YAML-document inside the appliance and can be used at any time to reproduce the appliance from scratch.

#### Appliance types

##### Solution stack

An appliance may include only the solution stack - LAMP, LEMP, MEAN, etc. In addition to the main components of the stack, you can also include additional programs, for example, you can add MongoDB or memcached to the LAMP. In this case, the user selects the components of the stack, gets the appliance and then installs its own application and configures it for this runtime environment.

##### Single application

An appliance can be built fitting the requirements of the target application, for example, Wordpress, Drupal or Redmine. In this case, the user selects the targets application and its version, and all other components are added and configured automatically by the online constructor service. After staring the appliance, we get the target application running and ready.

##### Integrated applications

An appliance may include a number of integrated applications. For example, Redmine + Gitlab + OwnCloud. In this case, when you create an appliance, the constructor prepares a common runtime environment for all installing applications, configures the programs and libraries, and sets up the interconnection of applications. After starting the appliance we get all that applications running, ready and integrated.


#### A wide choice of versions and software flavours

Most of the software in Jetware collection is represented in multiple versions or compilation parameters. For example, the database packages include MySQL versions 5.1, 5.5, 5.6 and 5.7, MariaDB versions 5.5, 10.0, 10.1, 10.2 and Percona 5.7, WebScaleSQL; for PHP there are versions 5.2, 5.3, 5.4, 5.5, 5.6, 7.0, 7.1. Many other server programs and libraries are available in multiple versions too.

It lets us to select a combination of programs and libraries that best meets the application requirements. If you have an old project requiring PHP 5.2 and MySQL 5.1, you can create the environment with these versions. If you are developing a new project and you need the latest version of the software, you can construct the appliance with PHP 7.0 and MariaDB 10.1.

#### Long-term support and updates

We track and release updates for all programs in our collection. You do not need to mess with "configure make install" and to recall it how you have built the program before, every time when you urgently need to install a new version. You get from our collection a fresh updates for each package used.

Thanks to the developers, providing new patches for bug and vulnerabilities, and companies like an Atomic Corp, we can also maintain and update a legacy software versions.

#### No conflicts

The programs and libraries from Jetware collections are independent of the runtime environment of the operating system and of the programs from a repositories. Jetware appliances can be installed both on new or already long-running server without the risk of conflict and disrupting.

#### Optimization for web-oriented tasks

We focus primarily on web-based applications - web sites' frontend and backend, backend for mobile applications, intranet services. Therefore, we have optimized and pre-configured appliances and software packages for this load profile.

Of course, you can use the appliance and Jetware programs for any other purpose.

#### Optimal use of resources

Jetware runtime environment is organized for more efficient use of CPU, RAM and storage systems. This both reduces the consumption of computing resources and speeds up the program comparing with the standard packages from the OS distributions. As a result, it reduces the cost of hardware and hosting up to 15-80% and at the same time improves the responsiveness of web sites and mobile applications.

#### Works on any Linux

Appliances and programs are compatible with any Linux operating system and any hardware based on Intel x86_64 architecture.  A 64-bit mode kernel version >= 2.6.32 is enough.

You can run the most modern PHP stack 7 + MariaDB 10.1 on a server with CentOS 6, or run legacy PHP 5.2 application on a server with Ubuntu 16.04.

There is also a collection of packages for older kernels and for other architectures. However, they are mostly experimental and are now ready for production use.

#### Easy installation

The Jetware appliances are easy to use. They are available in different implementations. The appliance can be one-click installed into any Linux operating system using an automatic script installer. The appliance can be downloaded and run as a virtual machine image of VMWare, VirtualBox or KVM / OpenStack. The appliance can be used as a base in your Vagrant-project, Docker or LXC container. The appliance can be launched from AMI on Amazon EC2, or as a droplet in DigitalOcean.

#### It works everywhere and it works the same

An appliance works the same way in all their implementations. You can use the same appliance everywhere and see your application working in the same runtime environment.

For example, your developing site on Drupal will work in the same environment in Vagrant-project on your laptop, in a testing Docker-container on a server in the office, in the VMWare Player on the customer's desktop and at the production web site on Amazon EC2 cloud.

#### Immutable infrastructure

In addition to regular servers, Jetware appliances are designed to operate on fail-over clusters and in the cloud with instances on demand. It's a handy tool for DevOps' arsenal for implementing the *immutable infrastructure* pattern. Using appliances simplifies upgrade and maintenance either large number of homogeneous servers, or multiple small specialized groups of servers.

#### Test before upgrade

You can easily test the new runtime environment on a virtual machine with new appliance before upgrading your production server.

#### Easy migration

You can easily move your application with entire runtime environment across a dedicated server, virtual machine, VPS and cloud platform Amazon EC2, Google Compute Engine, Microsoft Azure. You can quickly deploy a copy at the new location as a disaster response. You can freely change provider with a better new one.
